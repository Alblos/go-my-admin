definitions:
  connections.HandleCreateConnectionRequest:
    properties:
      common_name:
        type: string
      db_name:
        type: string
      host:
        type: string
      password:
        type: string
      port:
        type: integer
      ssl_mode:
        type: string
      username:
        type: string
    type: object
  connections.HandleCreateConnectionResponse:
    properties:
      error:
        type: boolean
      id:
        type: integer
      message:
        type: string
    type: object
  connections.HandleDeleteConnectionResponse:
    properties:
      error:
        type: boolean
      message:
        type: string
    type: object
  connections.HandleGetAllConectionsResponse:
    properties:
      connections:
        items:
          $ref: '#/definitions/types.Connection'
        type: array
      error:
        type: boolean
    type: object
  connections.HandleGetConnectionByIdResponse:
    properties:
      connection:
        $ref: '#/definitions/types.Connection'
      error:
        type: boolean
    type: object
  connections.HandleTestConnectionRequest:
    properties:
      db_name:
        type: string
      host:
        type: string
      password:
        type: string
      port:
        type: integer
      ssl_mode:
        type: string
      username:
        type: string
    type: object
  connections.HandleTestConnectionResponse:
    properties:
      error:
        type: boolean
      message:
        type: string
    type: object
  connections.HandleUpdateConnectionRequest:
    properties:
      common_name:
        type: string
      database_name:
        type: string
      host:
        type: string
      id:
        type: integer
      port:
        type: integer
      ssl_mode:
        type: string
      username:
        type: string
    type: object
  connections.HandleUpdateConnectionResponse:
    properties:
      error:
        type: boolean
      message:
        type: string
    type: object
  interactDatabases.requestQuery:
    properties:
      query:
        type: string
    type: object
  types.Connection:
    properties:
      common_name:
        type: string
      database_name:
        type: string
      host:
        type: string
      id:
        type: integer
      password:
        type: string
      port:
        type: integer
      ssl_mode:
        type: string
      username:
        type: string
    type: object
  types.ErrorResponse:
    properties:
      error:
        type: boolean
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /connections:
    get:
      description: Gets all the connections that a user has added
      produces:
      - application/json
      responses:
        "200":
          description: Returns all connections
          schema:
            $ref: '#/definitions/connections.HandleGetAllConectionsResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Get all connections
      tags:
      - connections
  /connections/{id}:
    get:
      description: Get the data of a connection by its ID
      parameters:
      - description: Connection ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns the connection data
          schema:
            $ref: '#/definitions/connections.HandleGetConnectionByIdResponse'
        "400":
          description: Invalid connection ID
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "404":
          description: Connection with the given ID does not exist
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Get a connection by ID
      tags:
      - connections
  /connections/create:
    post:
      consumes:
      - application/json
      description: Creates a connection with the given parameters
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/connections.HandleCreateConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: The connection was created successfully
          schema:
            $ref: '#/definitions/connections.HandleCreateConnectionResponse'
        "400":
          description: The request body is invalid or that some required fields are
            missing
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "502":
          description: Error creating connection
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Create a connection
      tags:
      - connections
  /connections/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a connection with the given ID
      parameters:
      - description: Connection ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: The connection was deleted successfully
          schema:
            $ref: '#/definitions/connections.HandleDeleteConnectionResponse'
        "400":
          description: Invalid connection ID
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "404":
          description: Connection with the given ID does not exist
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Delete a connection
      tags:
      - connections
  /connections/test:
    post:
      consumes:
      - application/json
      description: Test a connection
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/connections.HandleTestConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: The connection was tested successfully
          schema:
            $ref: '#/definitions/connections.HandleTestConnectionResponse'
        "400":
          description: The request body is invalid or that some required fields are
            missing
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "402":
          description: Connection could not be established
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Test a connection
      tags:
      - connections
  /connections/update:
    put:
      consumes:
      - application/json
      description: Update a connection
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/connections.HandleUpdateConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: The connection was updated successfully
          schema:
            $ref: '#/definitions/connections.HandleUpdateConnectionResponse'
        "400":
          description: The request body is invalid or that some required fields are
            missing
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "404":
          description: Connection with the given ID does not exist
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Update a connection
      tags:
      - connections
  /ping:
    get:
      description: Ping the server
      produces:
      - application/json
      responses:
        "200":
          description: Returns pong
          schema:
            type: object
      summary: Ping the server
      tags:
      - general
  /query/{connectionId}:
    post:
      consumes:
      - application/json
      description: Query a database
      parameters:
      - description: Connection ID
        in: path
        name: connectionId
        required: true
        type: integer
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interactDatabases.requestQuery'
      produces:
      - application/json
      responses:
        "200":
          description: Returns the rows
          schema:
            type: object
        "400":
          description: If the request body is invalid
          schema:
            type: object
        "500":
          description: Internal error
          schema:
            type: object
        "501":
          description: If the connection could not be established
          schema:
            type: object
        "502":
          description: If the query could not be run
          schema:
            type: object
      summary: Query a database
      tags:
      - interactDatabases
  /schema/{connectionId}:
    get:
      consumes:
      - application/json
      description: Get the schema of a database
      parameters:
      - description: Connection ID
        in: path
        name: connectionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns the schema
          schema:
            type: object
        "400":
          description: Returns the error
          schema:
            type: object
        "501":
          description: If the connection could not be established or the schema could
            not be retrieved
          schema:
            type: object
      summary: Get the schema of a database
      tags:
      - interactDatabases
  /schema/refresh/{connectionId}:
    get:
      consumes:
      - application/json
      description: Refresh the schema of a database
      parameters:
      - description: Connection ID
        in: path
        name: connectionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns the schema
          schema:
            type: object
        "400":
          description: Returns the error
          schema:
            type: object
        "501":
          description: If the connection could not be established or the schema could
            not be retrieved
          schema:
            type: object
      summary: Refresh the schema of a database
      tags:
      - interactDatabases
swagger: "2.0"
